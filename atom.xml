<?xml version='1.0' encoding='utf-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://urara-demo.netlify.app/</id>
  <title><![CDATA[Andrew Boldi]]></title>
  <subtitle><![CDATA[Blog]]></subtitle>
  <icon>https://urara-demo.netlify.app/favicon.png</icon>
  <link href="https://urara-demo.netlify.app" />
  <link href="https://urara-demo.netlify.app/atom.xml" rel="self" type="application/atom+xml" />
  <updated>2025-07-08T04:51:41.860Z</updated>
  <author>
    <name><![CDATA[Andrew Boldi]]></name>
  </author>
  <category term="Machine Learning" scheme="https://urara-demo.netlify.app/?tags=Machine%20Learning" />
  <category term="Interpretability" scheme="https://urara-demo.netlify.app/?tags=Interpretability" />
  <category term="Computer Science" scheme="https://urara-demo.netlify.app/?tags=Computer%20Science" />
  <category term="Algorithmic Thinking" scheme="https://urara-demo.netlify.app/?tags=Algorithmic%20Thinking" />
  <category term="Computational Chemistry" scheme="https://urara-demo.netlify.app/?tags=Computational%20Chemistry" />
  <category term="Programming" scheme="https://urara-demo.netlify.app/?tags=Programming" />
  <category term="Chemistry" scheme="https://urara-demo.netlify.app/?tags=Chemistry" />
  <entry>
    <title type="html"><![CDATA[So what is Layerwise Relevance Propagation (LRP)?]]></title>
    <link href="https://urara-demo.netlify.app/LRP1" />
    <id>https://urara-demo.netlify.app/LRP1</id>
    <published>2025-07-07T00:00:00.000Z</published>
    <updated>2025-07-08T04:51:13.406Z</updated>
    <content type="html">
      <![CDATA[<p data-svelte-h="svelte-avnihn">Let’s say we have a simple neural network. How do we know what input neurons were most important for the final prediction? Discuss perturbation, etc, etc. Generally speaking a neural network consists of non-linear functions. So what can we do, approximate all the nonlinear functions as first-order Taylor expansions! (make a diagram) We also have some nice properties like conservation and positivity but they are not strictly required (and more recent papers ignore these constraints!). go into the derivation. Go into AttnLRP. Go into Chefer.</p> <p data-svelte-h="svelte-dx87xm">^ Actually it might be a good idea to have a review paper…?</p>]]>
    </content>
    <category term="Machine Learning" scheme="https://urara-demo.netlify.app/?tags=Machine%20Learning" />
    <category term="Interpretability" scheme="https://urara-demo.netlify.app/?tags=Interpretability" />
    <category term="Computer Science" scheme="https://urara-demo.netlify.app/?tags=Computer%20Science" />
  </entry>
  <entry>
    <title type="html"><![CDATA[To Be or not to be Bayesian]]></title>
    <link href="https://urara-demo.netlify.app/bayesianthinking" />
    <id>https://urara-demo.netlify.app/bayesianthinking</id>
    <published>2025-07-07T00:00:00.000Z</published>
    <updated>2025-07-08T04:51:13.408Z</updated>
    <content type="html">
      <![CDATA[<p data-svelte-h="svelte-tohsa3">Many people have said that Bayesian updating is a good framework for understanding how beliefs change over time. However, humans can significantly update their beliefs if they reach a set of logical conclusions. This is a significant driver in also updating one’s beliefs. It’s also a significant reason why humans are able to have such high reasoning capabilities with such limited data: we reason as a form of synthetic data generation. We use data to build a fundamental set of axioms. Then if we apply logical reasoning, we can create a vastly more significant better way of reasoning. And there is extreme value is boiling down axioms into more fundamental principles. This is how Elon Musk reasons. Rather than taking textbook knowledge as truth, he boils it down further into, say, Newton’s laws or the Lagrangian/Hamiltonian formalisms. Then you go back to the advanced knowledge expressed in textbooks with your axiomatic thinking. And this gives you solid experience for new knowledge. This is a breakthrough if implemented. It’s what Francois Chollet is working on.</p> <p data-svelte-h="svelte-1qmlhh">Huge idea: basically we need to have an LLM continually be boiling down its entire corpus of generated knowledge into a vector DB of “axiomatic truths”, “likely truths”, or “false” statements. But we need to somehow update this in the model itself. We might be able to embedWe essentially want to create circuits in a neural network based on truths. Subgraph of truths…</p> <p data-svelte-h="svelte-6unh82">Very interesting that I came to this conclusion without seeing it from my initial thoughts of Bayesian thought. That literally proves my point. Francois Chollet’s talk had such an impact (a single presentation) that it fundmanetally updated my belief. We have a “truth sensing detector”. This should be built in.</p>]]>
    </content>
    <category term="Algorithmic Thinking" scheme="https://urara-demo.netlify.app/?tags=Algorithmic%20Thinking" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Signal over Noise]]></title>
    <link href="https://urara-demo.netlify.app/sn" />
    <id>https://urara-demo.netlify.app/sn</id>
    <published>2025-07-07T00:00:00.000Z</published>
    <updated>2025-07-08T04:51:13.408Z</updated>
    <content type="html">
      <![CDATA[<p data-svelte-h="svelte-10jurf4">It’s so imperative to discern the signal over noise. You need to continually ask yourself, “what is the most important thing” for a particular system or something you’re doing or anything. You need to cut away the noise and focus on the most significant parts. For example, asking “what are the limitations in a machine learning model” is such a great way to gauge the places where we can improve. It’s super great to of course be excited by something and come up with new ideas and become a visionary. But you need to remain close to the truth to make advancements.</p>]]>
    </content>
    <category term="Algorithmic Thinking" scheme="https://urara-demo.netlify.app/?tags=Algorithmic%20Thinking" />
  </entry>
  <entry>
    <title type="html"><![CDATA[Computational Chemistry from Scratch]]></title>
    <link href="https://urara-demo.netlify.app/compchem1" />
    <id>https://urara-demo.netlify.app/compchem1</id>
    <published>2025-02-24T00:00:00.000Z</published>
    <updated>2025-07-08T04:51:13.408Z</updated>
    <content type="html">
      <![CDATA[ <p data-svelte-h="svelte-ziiss8">So you want to learn computational chemistry but haven’t taken quantum mechanics, chemistry, physical chemistry, and numerical algorithms? No problem! In this series of articles we will build up the approximations used in computational chemistry with no prerequisities other than precalculus, high school calculus, and an enthusiastic reader!</p> <h1 id="motivation" data-svelte-h="svelte-11bj96i"><a href="#motivation">Motivation</a></h1> <p data-svelte-h="svelte-af42bk">Chemistry is an expensive and dangerous field. Doubtless you have heard of stories of crazy chemists blowing up their labs or inhaling toxic fumes or requiring expensive equipment to run experiments. A more convenient way to chemistry, then, is to sit at home on our beds and simulate experiments with our wonderful computers!</p> <p data-svelte-h="svelte-q0p6dq">Our goal today is to simulate the behavior of atoms with programming.</p> <p data-svelte-h="svelte-1jj24tk">How can we do that? What even is an atom?</p> <h1 id="starting" data-svelte-h="svelte-zmfee"><a href="#starting">Starting</a></h1> <p data-svelte-h="svelte-1atlk0y">Many of these questions are better reserved for an expert in quantum mechanics… but today here I will present a few key assumptions and then build up our approximations from there.</p>    <ol><li><strong>We can represent the full state of an atom with a symbol, <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut"></span><span class="mord mathnormal">ψ</span></span></span></span><!-- HTML_TAG_END --></span>.</strong> What I mean by state of an atom is this <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut"></span><span class="mord mathnormal">ψ</span></span></span></span><!-- HTML_TAG_END --></span> will tell us <em data-svelte-h="svelte-1nulq8v">everything</em> we would ever want to know about an atom.</li> <li><strong>Applying functions<sup id="fnref-1" data-svelte-h="svelte-1r5okub"><a href="#fn-1" class="footnote-ref">1</a></sup> to <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut"></span><span class="mord mathnormal">ψ</span></span></span></span><!-- HTML_TAG_END --></span> will give us information about the atom</strong>. For example, we will soon define an</li> <li data-svelte-h="svelte-6r3dq5"><strong>Every atom has an intrinsic “Energy”.</strong> You can think of this as how much it can move now and how much it’s stored up in the future. For example, the energy of a car is equal to how fast it’s moving and how much the car <em>will</em> be able to move in the future.</li></ol> <p data-svelte-h="svelte-12p878m">Now, for a little history. At the turn of the 20th century, some wonderful physicists like Niels Bohr, Albert Einstein, Max Planck, and many others discovered a very intriguing property about these atoms we’ve described: <strong>Every atom can only take on “certain” energies</strong>. What I mean is we can’t have a range of energies for our atom. These energies must be <em>discrete</em>. It’s kind of like how you can only only have one plate or two plates, but half a plate doesn’t make sense!</p> <p data-svelte-h="svelte-8hlg9c">The importance of this</p> <div class="footnotes"><hr> <ol><li id="fn-1">Technically, we apply <em data-svelte-h="svelte-mrpi75">operators</em> to <span class="math math-inline"><!-- HTML_TAG_START --><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut"></span><span class="mord mathnormal">ψ</span></span></span></span><!-- HTML_TAG_END --></span> which<a href="#fnref-1" class="footnote-backref" data-svelte-h="svelte-smh7qh">↩</a></li></ol></div>]]>
    </content>
    <category term="Computational Chemistry" scheme="https://urara-demo.netlify.app/?tags=Computational%20Chemistry" />
    <category term="Programming" scheme="https://urara-demo.netlify.app/?tags=Programming" />
    <category term="Chemistry" scheme="https://urara-demo.netlify.app/?tags=Chemistry" />
  </entry>
</feed>